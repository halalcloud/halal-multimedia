#include "stdAfx.h"
#include "ElementStreamPackerTest.h"
#include "CElementStreamPacker.h"
CPPUNIT_TEST_SUITE_REGISTRATION(CElementStreamPackerTest);
CElementStreamPackerTest::CElementStreamPackerTest(void)
{
}

CElementStreamPackerTest::~CElementStreamPackerTest(void)
{
}

void CElementStreamPackerTest::setUp()
{

}

void CElementStreamPackerTest::tearDown()
{

}

void CElementStreamPackerTest::GetPacketTest()
{
	unsigned char buf[] = {0x00,0x00,0x01,0xE0,0xAD,0xBD,0x80,0xC0,0x0A,0x31,0x00,0x07,0xD8,0x61,0x11,0x00,0x07,0xBC,0x41,0x00,0x00,0x00,0x01,0x09,0xF0,0x00,0x00,0x00,0x01,0x67,0x4D,0x40,0x1F,0x9A,0x72,0x81,0x40,0x7B,0x7F,0xE0,0x00,0x80,0x00,0x62,0x00,0x00,0x03,0x00,0x02,0x00,0x00,0x03,0x00,0x64,0x1E,0x30,0x62,0x2C,0x00,0x00,0x00,0x01,0x68,0xE9,0x23,0x2C,0x80,0x00,0x00,0x01,0x06,0x05,0xFF,0xFF,0x8B,0xDC,0x45,0xE9,0xBD,0xE6,0xD9,0x48,0xB7,0x96,0x2C,0xD8,0x20,0xD9,0x23,0xEE,0xEF,0x78,0x32,0x36,0x34,0x20,0x2D,0x20,0x63,0x6F,0x72,0x65,0x20,0x31,0x30,0x30,0x20,0x2D,0x20,0x48,0x2E,0x32,0x36,0x34,0x2F,0x4D,0x50,0x45,0x47,0x2D,0x34,0x20,0x41,0x56,0x43,0x20,0x63,0x6F,0x64,0x65,0x63,0x20,0x2D,0x20,0x43,0x6F,0x70,0x79,0x6C,0x65,0x66,0x74,0x20,0x32,0x30,0x30,0x33,0x2D,0x32,0x30,0x31,0x30,0x20,0x2D,0x20,0x68,0x74,0x74,0x70,0x3A,0x2F,0x2F,0x77,0x77,0x77,0x2E,0x76,0x69,0x64,0x65,0x6F,0x6C,0x61,0x6E,0x2E,0x6F};
	unsigned char buf1[] = {0x72,0x67,0x2F,0x78,0x32,0x36,0x34,0x2E,0x68,0x74,0x6D,0x6C,0x20,0x2D,0x20,0x6F,0x70,0x74,0x69,0x6F,0x6E,0x73,0x3A,0x20,0x63,0x61,0x62,0x61,0x63,0x3D,0x31,0x20,0x72,0x65,0x66,0x3D,0x34,0x20,0x64,0x65,0x62,0x6C,0x6F,0x63,0x6B,0x3D,0x31,0x3A,0x30,0x3A,0x30,0x20,0x61,0x6E,0x61,0x6C,0x79,0x73,0x65,0x3D,0x30,0x78,0x31,0x3A,0x30,0x78,0x31,0x31,0x31,0x20,0x6D,0x65,0x3D,0x75,0x6D,0x68,0x20,0x73,0x75,0x62,0x6D,0x65,0x3D,0x36,0x20,0x70,0x73,0x79,0x3D,0x31,0x20,0x70,0x73,0x79,0x5F,0x72,0x64,0x3D,0x31,0x2E,0x30,0x30,0x3A,0x30,0x2E,0x30,0x30,0x20,0x6D,0x69,0x78,0x65,0x64,0x5F,0x72,0x65,0x66,0x3D,0x30,0x20,0x6D,0x65,0x5F,0x72,0x61,0x6E,0x67,0x65,0x3D,0x31,0x36,0x20,0x63,0x68,0x72,0x6F,0x6D,0x61,0x5F,0x6D,0x65,0x3D,0x31,0x20,0x74,0x72,0x65,0x6C,0x6C,0x69,0x73,0x3D,0x31,0x20,0x38,0x78,0x38,0x64,0x63,0x74,0x3D,0x30,0x20,0x63,0x71,0x6D,0x3D,0x30,0x20,0x64,0x65,0x61,0x64,0x7A,0x6F,0x6E,0x65,0x3D,0x32,0x31,0x2C,0x31,0x31,0x20};
	wzd::Packet pkt;
	const unsigned char* pBuf = NULL;
	int iRet = 0;
	//* {{ 只解两个包.
	{
		pBuf = buf;
		wzd::CElementStreamPacker packer;
		iRet = packer.GetPacket(pkt, pBuf, sizeof(buf));
		CPPUNIT_ASSERT(1 == iRet);
		pBuf = buf1;
		iRet = packer.GetPacket(pkt, pBuf, sizeof(buf));
		CPPUNIT_ASSERT(1 == iRet);
	}
	//* }}

	//* {{ 错误,包不是开头.这种情况下只能丢弃不处理.不能抛出异常.
	{
		pBuf = buf1;
		wzd::CElementStreamPacker packer;
		CPPUNIT_ASSERT(packer.GetPacket(pkt, pBuf, sizeof(buf)));
		pBuf = buf;
		CPPUNIT_ASSERT(1 == packer.GetPacket(pkt, pBuf, sizeof(buf)));
	}
}
